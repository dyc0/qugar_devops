name: "Install Dependencies"
description: "Install dependencies for build and test jobs"
inputs:
  os:
    description: "Operating system"
    required: true
    default: "ubuntu-latest"
  pyvista_version:
    description: "PyVista version to install"
    required: false
    default: "0.44.1"
  deps_prefix:
    description: "Install prefix for built deps (cached)"
    required: false
    default: "${{ github.workspace }}/.deps"

runs:
  using: "composite"
  steps:
    - name: Show runner info
      shell: bash
      run: |
        echo "Running on OS: ${{ runner.os }}"
        echo "Runner name: ${{ runner.name }}"
    - name: Install CMake and ninja, cross-platform
      uses: lukka/get-cmake@latest
      # Default caching options are suitable for GH hosted runners
    - name: Linux Dependencies
      if: ${{ inputs.os == 'ubuntu-latest' }}
      run: |
        sudo apt-get update
        sudo apt-get install -y g++
        sudo apt-get install -y gfortran # for LAPACK building
        # TODO: LAPACK and LAPACKE can be built from source, that should be the
        # default behaviour for all OSes and that should provide all the necessary
        # files.
    - name: macOS Dependencies
      if: ${{ inputs.os == 'macos-latest' }}
      run: |
        brew update
        brew install llvm
        brew install lapack 
        # TODO: We also need lapacke on macOS
    - name: Windows Dependencies
      if: ${{ inputs.os == 'windows-latest' }}
      run: |
        choco install -y llvm

      # Catch2 is cloned via HTTPs to avoid SSH key issues on GitHub runners
      # Alternatively, we could provide an AUTH token secret to the action
      # It is then built and installed
    - name: Catch2 checkout and installation
      shell: bash
      run: |
        git clone --depth 1 https://github.com/catchorg/Catch2.git ${{ runner.temp }}/catch2
        cmake -B ${{ runner.temp }}/catch2/build -S ${{ runner.temp }}/catch2 -DBUILD_TESTING=OFF
        cmake --build ${{ runner.temp }}/catch2/build --parallel --target install

    - name: LAPACK checkout and installation
      shell: bash
      run: |
        git clone --depth 1 https://github.com/Reference-LAPACK/lapack.git ${{ runner.temp }}/lapack
        cmake -B ${{ runner.temp }}/lapack/build -S ${{ runner.temp }}/lapack -DBUILD_SHARED_LIBS=ON -DLAPACKE=ON
        cmake --build ${{ runner.temp }}/lapack/build --parallel --target install

    # - name: Install Python
    #   uses: actions/setup-python@v4
    #   with:
    #     python-version: '3.x'
    # - name: Install pip dependencies
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install pyvista[trame]==0.44.1
    #     pip install nanobind scikit-build-core
    #     pip install numpy
    #     pip install pytest
    # - name: Install pyvista
    #   shell: bash
    #   run: |
    #     set -euo pipefail
    #     case "${{ runner.arch }}" in
    #       ARM64)
    #         python -m pip install --no-cache-dir \
    #           https://github.com/finsberg/vtk-aarch64/releases/download/vtk-9.3.0-cp312/vtk-9.3.0.dev0-cp312-cp312-linux_aarch64.whl
    #         ;;
    #     esac
    #     python -m pip install matplotlib
    #     python -m pip install "pyvista[trame]==${{ inputs.pyvista_version }}"
    #
    # #   #TODO: FenicsX, it's nontrivial to install
    #
