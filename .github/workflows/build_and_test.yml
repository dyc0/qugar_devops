name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest] # , macos-latest, windows-latest
        arch: [x64] # , arm64

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install C++ dependencies
        uses: ./.github/actions/install-cpp-dependencies
        with:
          os: ${{ matrix.os }}         # if your composite action expects inputs

      - name: Configure, build and install C++ library
        shell: bash
        run: |
          cmake -S . -B build \
                -G Ninja \
                -DBUILD_TESTING=ON \
                -DCMAKE_INSTALL_PREFIX="${{ github.workspace }}/install"
          cmake --build build --parallel
          cmake --install build

      - name: Package C++ library
        shell: bash
        run: |
          tar -C "${{ github.workspace }}/install" -caf \
            qugar-${{ runner.os }}-${{ runner.arch }}.tar.zst .

      # TODO: C++ tests are temporarily disabled because they are failing
      - name: Run C++ tests
        # if: false # Temporarily disable C++ tests because they are failing
        shell: bash
        run: ctest --test-dir build/cpp --output-on-failure --output-junit test-results.xml

      # These still run even if the previous step failed:
      - uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: junit-${{ runner.os }}-${{ runner.arch }}
          path: ${{ github.workspace }}/build/cpp/test-results.xml

      - uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: logs-${{ runner.os }}-${{ runner.arch }}
          path: |
            ${{ github.workspace }}/build/cpp/Testing/Temporary/LastTest.log
            ${{ github.workspace }}/build/cpp/CTestTestfile.cmake

      - name: Upload C++ library artifact
        uses: actions/upload-artifact@v4
        with:
          name: qugar-${{ runner.os }}-${{ runner.arch }}
          path: ${{ github.workspace }}/qugar-${{ runner.os }}-${{ runner.arch }}.tar.zst


  # build-wheel:
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     fail-fast: false
  #     matrix: { 
  #       os: [ubuntu-latest], # , macos-latest, windows-latest] 
  #       arch: [x64] # , arm64]
  #     }
  #

