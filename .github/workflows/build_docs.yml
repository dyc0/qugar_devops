name: Build docs

on:
  push:
    branches:
      - main
      - release
      - doc

jobs:

  build:
    runs-on: ubuntu-24.04
    container: ghcr.io/fenics/dolfinx/dolfinx:v0.9.0

    permissions:
      id-token: write
      pages: write
      contents: write


    steps:
      - uses: actions/checkout@v4

      - name: Install QUGaR (C++)
        run: |
          git config --global --add safe.directory /__w/qugar/qugar
          cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -B build -S cpp/
          cmake --build build --parallel 3
          cmake --install build

      - name: Install QUGaR (Python)
        run: |
          python3 -m pip -v install --no-cache-dir -r ./python/build-requirements.txt
          python3 -m pip -v install --no-cache-dir './python/.[docs,pyvista,fenicsx]'

      - name: Build docs
        run: |
          # ... installation of all tools ...
          # get all tags, and run a Python script
          # which you find below to build all documents
          # git fetch --tags
          cd doc
          python3 build_docs.py
          ls -l .
          ls /__w/qugar/qugar/doc/pages
          pwd
          

      - name: Determine directory to publish docs to
        id: docs-publish-dir
        run: |
          python -c "
          import os, re
          import qugar
          github_ref = os.environ.get('GITHUB_REF')
          if github_ref == 'refs/heads/main':
            dst_dir = 'main'
          elif github_ref == 'refs/heads/doc':
            dst_dir = 'main'
          elif github_ref == 'refs/heads/release':
            dst_dir = qugar.__version__
          else:
            raise ValueError('Invalid documentation deployment branch')
          dst_dir = 'test'
          print(f'echo \"target={dst_dir}\" >> $GITHUB_OUTPUT')"

      - name: Deploy to GitHub Pages
        id: deployment
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./doc/pages
          destination_dir: ${{ steps.docs-publish-dir.outputs.target }}
          keep_files: true

  # deploy:
  #   runs-on: ubuntu-24.04
  #   needs: build

  #   environment:
  #     # environment created automatically by GitHub
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}

  #   permissions:
  #     id-token: write
  #     pages: write
  #     contents: write

  #   steps:
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: peaceiris/actions-gh-pages@v4
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #         publish_dir: ./pages
  #         # destination_dir: ${{ steps.docs-publish-dir.outputs.target }}
  #         destination_dir: test
  #         keep_files: true

              
